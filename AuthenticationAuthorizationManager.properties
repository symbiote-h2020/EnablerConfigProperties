server.port=${PORT:8080}

# define the destination to which the input MessageChannel should be bound
spring.cloud.stream.bindings.input.destination = AuthenticationAuthorizationManagers

# ensures 1 node in a group gets message (point-to-point, not a broadcast)
spring.cloud.stream.bindings.input.group = AuthenticationAuthorizationManagers-group

# ensure that the Q is durable
spring.cloud.stream.bindings.input.durableSubscription = true

# defines the name of Core AAM database in mongoDB
aam.database.name=symbiote-aam-database

# time for which validToken, componentCertificate, availableAAMs should be cached to avoid comunication with another AAM
aam.cache.validToken.expireMillis=60000
aam.cache.componentCertificate.expireSeconds=60
aam.cache.availableAAMs.expireSeconds=60
# if size set to -1, validToken cache has no limit
aam.cache.validToken.size=1000

#JWT validity time in milliseconds - how long the tokens issued to your users (apps) are valid... think maybe of an hour, day, week?
aam.deployment.token.validityMillis = 60000
# allowing offline validation of foreign tokens by signature trust-chain only. Useful when foreign tokens are expected to be used along with no internet access
aam.deployment.validation.allow-offline= true


# required to properly run as PAAM  (Enabler is a virtual platform)
spring.profiles.active=platform
